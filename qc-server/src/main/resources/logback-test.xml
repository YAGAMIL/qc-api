<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true" scan="true">

    <!--控制台输出 -->
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
      <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
        <Pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level[%thread]%logger{56}.%method:%L -%msg%n</Pattern>
      </encoder>
    </appender>

    <appender name="qc_api_info" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>logs/qc_api_info.log</File>
        <!--<File>D:/logs/server/info/qc_api_info.log</File>-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{0} - %msg%n</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>logs/qc_api_info.%d{yyyy-MM-dd}.%i.log.zip</FileNamePattern>
            <!--<FileNamePattern>D:/logs/server/info/qc_api_info.%d{yyyy-MM-dd}.%i.log.zip</FileNamePattern>-->
            <!-- keep 30 days' worth of history -->
            <maxHistory>30</maxHistory>
            <!-- file max size 5MB -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <MaxFileSize>5MB</MaxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>


    <appender name="qc_api_request" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>logs/qc_api_request.log</File>
        <!--<File>D:/logs/server/request/qc_api_request.log</File>-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{0} - %msg%n</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>logs/request/qc_api_request.%d{yyyy-MM-dd}.%i.log.zip</FileNamePattern>
            <!--<FileNamePattern>D:/logs/server/request/qc_api_request.%d{yyyy-MM-dd}.%i.log.zip</FileNamePattern>-->
            <!-- keep 30 days' worth of history -->
            <maxHistory>30</maxHistory>
            <!-- file max size 5MB -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <MaxFileSize>5MB</MaxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <appender name="qc_api_error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>logs/qc_api_error.log</File>
        <!--<File>D:/logs/server/error/qc_api_error.log</File>-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %logger{0} - %msg%n</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>logs/qc_api_error.%d{yyyy-MM-dd}.%i.log.zip</FileNamePattern>
            <!--<FileNamePattern>D:/logs/server/error/qc_api_error.%d{yyyy-MM-dd}.%i.log.zip</FileNamePattern>-->
            <!-- keep 30 days' worth of history -->
            <maxHistory>30</maxHistory>
            <!-- file max size 5MB -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <MaxFileSize>5MB</MaxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>
    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/xxl-job/xxl-job-qc-server.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.path}.%d{yyyy-MM-dd}.zip</fileNamePattern>
        </rollingPolicy>
        <encoder>
            <pattern>%date %level [%thread] %logger{36} [%file : %line] %msg%n
            </pattern>
        </encoder>
    </appender>
    <logger name="org.hibernate.type.descriptor.sql.BasicBinder"  level="TRACE" />
    <logger name="org.hibernate.type.descriptor.sql.BasicExtractor"  level="DEBUG" />
    <logger name="org.hibernate.SQL" level="DEBUG" />
    <logger name="org.hibernate.engine.QueryParameters" level="DEBUG" />
    <logger name="org.hibernate.engine.query.HQLQueryPlan" level="DEBUG" />
    <logger name="org.springframework" level="INFO"/>
    <logger name="ch.qos.logback" level="INFO"/>
    <logger name="com.quantumtime.qc" level="DEBUG"/>

    <logger name="com.quantumtime.qc.common.filter.HttpTraceLogFilter" class="ch.qos.logback.classic.AsyncAppender" level="DEBUG" additivity="false">
        <appender-ref ref="qc_api_request" />
    </logger>

    <logger name="com.quantumtime.qc.common.jwt.JwtAuthenticationTokenFilter" class="ch.qos.logback.classic.AsyncAppender" level="DEBUG" additivity="false">
        <appender-ref ref="qc_api_request" />
    </logger>

    <appender name="ASYNC_INFO" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="qc_api_info" />
    </appender>

    <appender name="ASYNC_ERROR" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="qc_api_error" />
    </appender>

    <appender name="STDOUT_INFO" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="stdout" />
    </appender>

    <root level="INFO">
        <appender-ref ref="ASYNC_INFO"/>
        <appender-ref ref="ASYNC_ERROR"/>
        <appender-ref ref="STDOUT_INFO"/>
        <appender-ref ref="file"/>
    </root>
</configuration>
